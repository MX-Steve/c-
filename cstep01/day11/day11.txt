1.C语言里所有文字信息必须记录在一组连续的字符类型存储区里
2.所有文字信息必须以'\0'字符做结尾，这个字符的ASCII码就是0
==》符合以上两个特征的内容就可以在C语言里记录文字信息，它们叫做字符串
3.字符串里'\0'字符前面的部分是有效字符
4.所有字符串都可以采用字符类型指针表示

5.字符串字面值是一种字符串，用一对双引号中间的一组字符表示(例如"avc","^&%&"等)
	1.编译器在编译的时候会自动在字符串字面值的末尾加上'\0'字符
	2.编译器也会把字符串字面值替换成第一个字符所在存储区的地址
	3.字符串字面值的内容不可以修改
	4.程序里多个内容一样的字符串字面值其实是同一个
	5.多个并列在一起的字符串字面值会被合并成一个

	6.字符数组也可以用来表示字符串
		1.只有包含'\0'字符的字符数组才可以当作字符串使用
	7.可以在声明字符数组的时候使用字符串字面值对它进行初始化，这个时候编译器会把字符串字面值里的'\0'字符也初始化到字符数组里
	8.字符数组里字符串的内容可以修改
	9.可以在printf函数调用语句里使用%s做占位符把字符串里所有有效字符显示在屏幕上

6.不可以使用操作符对字符串进行操作，应该使用一组标准函数
	1.为了使用这组标准函数需要包含string.h头文件
		1.strlen         用来统计字符串里有效字符个数
										 和sizeof计算结果完全不同
		2.strcat         用来合并两个字符串
										 第一个参数不可以是字符串字面值
										 这个函数有可能修改不属于数组的存储区，这可能造成严重错误
		3.strncat        功能和strcat类似
										 这个函数用参数表示第一个参数里最多可以追加多少个字符
										 如果使用得当就可以避免strcat函数的问题
		4.strcmp         用来比较两个字符串的大小
										 返回值是1表示前一个字符串大
										 返回值是-1表示后一个字符串大
										 返回值是0表示一样大
		5.strncmp        用来比较两个字符串的前n个字符
		6.strcpy         用来把一个字符串记录到一个字符数组里
										 第一个参数必须是字符数组
                     这个函数有可能修改不属于数组的存储区，这也可能造成严重错误
		7.strncpy        功能和strcpy类似，
										 可以只复制字符串的前n个字符使用得当可以避免strcpy的问题有可能不复制'\0'字符
		8.memset         用来把字符数组里多个连续的字符类型存储区内容设置成同一个字符
		9.strstr         可以在一个大字符串里找某个小字符串的位置如果找不到则返回值是NULL

	2.以下两个字符串相关函数不需要包含string.h头文件
		1.sprintf     按照格式把多个数字合并成一个字符串并记录到字符数组里
		2.sscanf      按照格式从字符串里获得多个数字,并记录到存储区里

	3.以下两个函数可以把字符串里的数字转换成数字类型
		1.为了使用这两个函数需要包含stdlib.h头文件
		2.atoi        用来把字符串开头的整数部分转换成整数类型 %d
		3.atof        用来把字符串开头的浮点数部分转换成双精度浮点类型 %lg

7.在scanf函数调用语句里使用%s做占位符可以把用户在键盘上输入的字符串记录到字符数组里
	==>这种方法可能会出严重错误
==>解决：fgets函数也可以把用户输入的字符串	记录到字符数组里，这个函数可以避免scanf函数的问题
	1.这个函数需要三个参数
		1.数组名称
		2.数组里存储区个数
		3.用stdin代表键盘

	2.如果用户输入的内容不能把数组充满,就把用户最后输入的回车,当作'\n'字符也放到数组里
	3.如果输入内容过多,就把多余的数据留在输入缓冲区里,当作下一个字符串读到数组里

	==>应该在每次使用fgets函数从键盘得到字符串以后,把输入缓冲区里可能遗留的多余数据理掉，这样可以保证每次得到的都是用户新输入的字符串
	scanf("%*[^\n]");
	scanf("%*c");==>这两个函数可以把输入缓冲区里的东西清除
	==>清理多余数据的语句应该放在一个分支里，分支应该保证输入缓冲区里有多余数据的时候才执行

预习：
    1.主函数的参数
    2.宏
    3.条件编译
    4.多文件编程






