如果一个表达式里包含的数字类型不同
    就必须首先把它们转换成同一个类型
    然后再计算
这个转换过程叫隐式类型转换，完全由
    计算机完成

隐式类型转换中一定把占地小的类型转换成占地
    大的类型

如果不同类型存储区占地大小一样就把整数
    类型转换成浮点类型，把有符号类型
    转换成无符号类型

C语言里可以临时给一个数字指定一个类型，
    这叫做强制类型转换
强制类型转换格式如下
(char)300
强制类型转换有可能导致数据内容丢失

类型转换不会修改现有存储区的内容，计算机
    会用一个新的存储区记录转换后的数字，
    然后用这个新存储区的内容进行其他计算

分支语句可以在程序执行过程中从几组语句里
   挑选一组执行而忽略其他组
如果在编写程序的时候遇到多种可能性，每种
    可能性需要专门的语句处理，这种问题
    就可以采用分支语句解决

if关键字可以用来编写分支
if分支里需要包含多组语句，每组语句用来
    处理一种可能性
if分支里需要为每组语句编写配对的逻辑
    表达式，它们负责在多组语句之间进行
    选择。如果某一个逻辑表达式结果为真
    就执行它配对的语句。

****编写if分支之前必须首先确定有多少种
    可能性需要处理

if分支里任何两种可能性不可以同时出现

如果if分支的所有可能性中必然有一种会出现
   就可以省略最后一组语句的逻辑表达式
   和if关键字

如果if分支里多个逻辑表达式同时为真就
   执行第一个为真的逻辑表达式对应的那
   组语句而忽略后面的语句
if分支里的某一组语句只有当前面的所有逻辑
    表达式都为假，它配对的逻辑表达式为真
    的时候才会执行
编写if分支的时候应该把逻辑表达式简单的
    情况写在前面，这样更有可能对后面的
    逻辑表达式进行简化。

switch...case格式也可以用来编写分支
如果分支里的每种可能性都可以用一个整数
    代表就可以采用switch..case格式编写
每组语句必须用break;语句结束
default关键字后面的语句用来处理所有没
    列举出的数字

循环语句可以让一组语句反复多次执行
for关键字可以用来编写循环
for循环里可以让一个变量依次代表一组数字，
    然后使用一组语句处理它所代表的每个
    数字
这个变量叫做循环变量
循环变量按照统一的规律从第一个数字开始
    依次把要代表的每个数字计算出来并
    代表它
采用以下结构描述循环变量的变化过程
(把开始数字赋值给循环变量;
 用逻辑表达式描述循环变量和结束数字之间的关系;
 循环变量每次的变化规律)

如果一个问题可以采用一组数字的变化过程
    来描述就可以编写for循环解决这个问题

假设有如下的for循环
for (1;2;3) {
    4
}
它按照以下分组方式执行
[1,2][4,3,2][4,3,2]...[4,3,2]
第一组和其它组都不同
正常情况下for循环一定在两个相邻的组之间
    结束
如果某一组最后编号为2的逻辑表达式结果
    为真就启动下一组，否则结束循环
当for循环正常结束的时候循环变量一定落在
    指定的数字范围之外
for循环有可能不执行大括号里面的语句

for循环小括号里的每条语句都可以省略
如果省略小括号中间的逻辑表达式就表示
   逻辑表达式永远为真。这种循环不能
   正常结束，它们叫做死循环。

for循环小括号里最前面的部分和最后面的部分
    可以是用逗号连接的多条语句

C99规范里可以在小括号里临时声明循环变量
这种循环变量只能在循环里使用，循环结束
    之后就不能用了

可以在循环里使用break;语句立刻结束
   循环的执行
一旦执行了break;语句之后循环里的所有语句
    都不再执行，包括循环变量也不再变化
如果循环是用break;语句结束的则循环结束后
    循环变量一定落在指定范围之内

如果编写循环的时候无法计算循环的执行次数
    就可以先编写一个死循环，然后使用
    break;语句结束它

可以在循环里使用continue;语句直接跳到
    循环大括号的末尾，中间的所有语句这次
    循环都不执行

预习：
    1.for循环
    2.多重循环
    3.while循环和do...while循环
    4.缓冲区管理
    5.数组

=========================
sizeof(a)==>查看数据类型所占字节,双精度类型的字节为8




