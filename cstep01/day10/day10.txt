1.指针变量用来记录地址数据
	1.用途:为了找到一个普通变量
	2.只有记录有效地址的指针才能用来找到一个普通变量

2.声明指针变量的时候要在变量名称前加*

3.如果一个指针记录了一个普通变量的地址我们可以说它们之间建立了捆绑关系。

4.如果一个指针变量和一个普通变量之间存在捆绑关系,则在指针变量前加*可以表示这个普通变量的存储区

5.指针声明语句里的类型名称用来表示指针适合与哪种类型的存储区捆绑

6.可以在一条语句里声明多个同类型指针变量,这个时候要在每个指针变量名称前单独加*

7.没有记录有效地址的指针分为两类
	1.空指针里固定记录空地址(用NULL表示),空地址的数值就是数字0
	2.其它没有记录有效地址的指针都叫做野指针

	==>程序里禁止出现野指针，程序里的所有指针必须初始化

	1.指针变量初始化的时候*没有参与赋值过程

	2.指针在程序运行过程中可以和不同的存储区捆绑

8.可以把指针看作普通变量的某个身份

9.如果一个指针记录了数组里第一个存储区的地址就可以根据这个指针找到数组里的每个存储区
10.指针后加下标就可以用来表示数组里的存储区

地址数据只能参与以下几个计算过程
地址 + 整数   地址 - 整数    地址 - 地址
地址数据加减整数n实际上加减的是n个捆绑
    存储区的大小
数组里第一个存储区的地址加下标可以得到
    下标对应存储区的地址
采用如下方法也可以表示数组里的存储区
*(arr + num)
其中arr是数组名称，它代表数组里第一个
    存储区的地址。num是下标。
这个写法可以代表下标为num的存储区
地址之间做减法结果是一个整数，这个整数
    表示两个地址之间包含的捆绑存储区
    个数

可以在for循环里使用指针变量作为循环
    变量依次处理数组里的每个存储区

声明指针变量的时候可以使用const关键字
声明指针变量的时候可以把const关键字
    写在类型名称前。不可以通过这种
     指针对它捆绑的存储区做赋值，但是
     可以对指针本身做赋值。

声明指针变量的时候可以把const关键字写在
    指针变量名称前。可以通过这种指针
    对它捆绑的存储区做赋值，但是不能对
    这种指针本身做赋值。

声明指针的时候可以使用void作为类型名称
可以把这种指针叫做无类型指针
这种指针可以和任意类型存储区捆绑
无法通过这种指针知道它所捆绑存储区的类型
不应该在这种指针前面直接加*也不应该对
    这种指针做加减整数的计算
这种指针必须首先强制类型转换成有类型
    指针然后才能使用

所有跨函数使用存储区都是通过指针实现的

数组做形式参数的时候真正的形式参数是
    一个指针

所有指针形式参数如果能使用const关键字
    声明就应该使用
无类型指针通常作为函数的形式参数使用，
    调用函数可以通过无类型指针形式参数
    把任意类型的存储区交给被调用函数
    使用

使用存储区地址做返回值可以让调用函数
    使用被调用函数的存储区
被调用函数需要提供一个指针类型存储区
    记录作为返回值的地址数据
不可以把非静态局部变量存储区的地址
    做返回值使用

预习：
    1.字符串







