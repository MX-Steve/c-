1.练习
    25         1
    12         0
    6          0
    3          1
    1          1
    0          0

    ===>11001

    -234===>234
    234        0
    117        1
    58         0
    29         1
    14         0
    7          1
    3          1
    1          1
    0          0
    ===>11101010
    ===>00010101+1
    ===>10110
1.把二进制表示的数字从右向左每三个数位分成一组，每组用一个从0到7之间的数字替换，这个替换结果叫做数字的八进制表示方式
0110 1010  ==> 01 101 010==>152(八进制)
可以直接在程序里用八进制方式表示数字
	这种数字必须以0左开头
	可以采用%o做占位符把数字的八进制表示方式显示在屏幕上
把二进制数字从右向左没四个位数分为一组，每组用一个字符
	替代，这个替代结果叫做数字的十六进制表示方式
	用a-f替换10-15之间的数字
	1100 1011==>cb(十六进制)
	可以在程序里使用十六进制方式表示数字
	这种数字必须以0x做开头
	可以使用%x或%X做占位符，把数字的十六进制表示方式显示在屏幕上
	显示结果不是以0x做开头的
	使用%x做占位符的时候，显示结果里所有字母都是小写的
	使用%X做占位符的时候，显示结果里所有字母都是大写的
操作符代表对数字的处理规则
	根据操作符所需要配合的数字个数把操作符分为单目、双目、三目
	整数/整数,结果为整数
	%:			取余操作
	=：			赋值
	+= -=... 复合操作符
	++ --
	逻辑操作符
		!   == != > < >= <=
		5 < 7 < 3 ==> 5 < 7  && 7 < 3
												
位操作符可以直接操作二进制数位
	~是一个单目位操作符
	他可以根据一个数字计算出另外一个数字，这两个数字的所有二进制数位内容都不一样:把一个数字转换为二进制，然后将二进制求反，再转换为16进制或其他进制
	(按位求反)
双目位操作符包括按位与&，按位或|按位异或^
	都可以把两个数字对应二进制数位的内容做计算

按位与&可以把对应数位的内容做与计算
	5 & 3
	101 
	011
	==
	001 ==>1;
按位或|可以把对应数位的内容做或计算
	一位为1，结果为1
	5 | 3
	101
	011
	==111==》7
按位异或^可以把两个数字对应数位的内容做异或运算
	如果两个数位的内容一样，异或运算后为0，否则为1
	5 ^ 3
	110==》6
移位操作符：可以把一个数字里所有二进制数位的内容统一向左或向右移动n个位置
	>>表示向右移位
	<<表示向左移位
	他们都是双目位操作符
	操作符左边的数字是将要进行移位操作的数字
	操作符右边的数字是将要移动的位数
	相当于把每个数位的内容换一个数位放
	
	向左移位的时候，空位补0

	有符号类型数字右移时左边空出来的位数里，一定填充符号位的内容，无符号类型数字右移时左边空出来的数位里一定填充0

	一般情况下，向左移动n位，x2的n次方，向右，相反

位操作符不会修改现有存储区的内容

&也可以作为单目操作符使用，这个时候，他可以根据一个存储区，计算出存储区的地址

	可以使用%p做占位符把地址数据显示在屏幕上
	我们计算机里所有地址都是32个二进制数位构成的

*也可以做单目操作符使用，这个时候可以根据一个地址，找到他对应的存储区

